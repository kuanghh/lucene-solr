首先来理解一下什么是DFA分析

DFA分析是：

从初始状态（默认为0）出发，对于输入字符串中的每个字符，自动机都将沿着一条确定的边到另一状态，
这条边必须是标有输入符号的边。对n个字符的字符串进行了n次状态变换后，如果自动机到达了一个终态，
自动机将接收该字符串。若到达的不是终态，或者找不到与输入字符相匹配的边，那么字符串将拒绝接受这个字符串。 
由一个自动机识别的语言是该自动机接收的字符串集合。（这里请暂停观看）



现在，举了两个例子。。


数据已经准备好了。。先来看第一个列子

在准备例子的时候，我画了对应的DFA图


现在我们来手动校验一下 字符串 aaabb和  abbab

aaabb：首先状态默认从0开始

所以 第一步识别a：0―>a ->1
     第二步 识别a: 1->a->1
     第三部 识别a：1->a->1
     第四步 识别b: 1->b->2
     第五步  识别b: 2->b->3

所以最后去到的状态是3，然后看会我们的例子1中，最终接受状态是3，所以是YES

那么abbab通过我先前的手工校验，发现检验结果是NO

现在我们用javaFX所写的java applet程序来演示

程序验证aaabb结果和手工验证结果一致
程序验证abbab结果和我之前手工验证结果一致

---------------------------------------------------------------

接下来我们来验证例子二

例子二的数据稍微复杂

用到了5个状态还有3个参数

在做这个列子的时候，我把dfa图画了出来


和第一个例子一样，我准备好了数据


现在我们来手动验证一下字符串bacca和aacbc

默认从0状态开始
bacca:
第一部识别 b ：0->b->0
第二步识别 a: 0->a->1
第三步识别 c: 1->c->3
第四步识别 c: 3->c->4
第五步识别 a: 4->a->2

然后因为最终状态有两个2，4，所以bacca字符串识别是YES

aacbc：
第一步识别 a：0->a->1
第二步识别 a: 1->a->1
第三步识别 c: 1->c->3
第四步识别 b: 3->b->0
第五步识别 c: 0->c->3

所以最终状态是去到了3，但最终状态里却没有3，
所以aacbc字符串识别是返回NO

现在我们用javaFX写的java applet程序来验证一下这两个字符串


手工验证和程序验证一致

演示到此为止，谢谢收看







